#%RAML 1.0
title: customer-api-raml
version: v1
protocols: [HTTPS]
baseUri: https://api.samplehost.com/api/{version}
mediaType: application/json

description: |
  APIs to manage Customers. These APIs are protected by Basic Authentication.
  </br>
  To interact with these API, you will need an user account.

###################
## Security Schemes
###################
securitySchemes:
  basic: !include securitySchemes/basic.raml

###################
## Types
###################
types:
  errorResponse : !include schemas/errorResponse.schema
  customer: !include schemas/customer.schema
  paginatedResponse: !include schemas/paginatedResponse.schema



###################
## Traits
###################
traits:
  pageable: !include traits/pageable.raml
  sortable: !include traits/sortable.raml
  throwsForbiddenError: !include traits/throwsForbiddenError.raml
  throwsResourceNotFoundError: !include traits/throwsResourceNotFoundError.raml
  throwsInternalServerError: !include traits/throwsInternalServerError.raml
  makeConditionalRequests: !include traits/makeConditionalRequests.raml
  allowPatch:
      description: Allow partial modification of resource << resourcePathName | !singularize >>
      body: <<examplePatchResourceBody>>
      responses:
        204:
          description: Returns the <<resourcePathName | !singularize>> object
          body:
            application/json:
              example: <<patchResourceResponseExample>>
              type: <<patchResourceResponseType>>


###################
## Resource Types
###################
## TODO: Refactor these into resourceType folder
resourceTypes:
  collection:
    usage: Resource type for API operations on collection of resources
    description: A collection of <<resourcePathName>> in the system. Due to the high volume of data that can be retrieved, the response is paginated.

    get:
      is: [throwsForbiddenError,throwsResourceNotFoundError,throwsInternalServerError,makeConditionalRequests]
      description: Retrieve all <<resourcePathName | !pluralize>>
      responses:
        200:
          headers:
            ETag:
              description: This ETag header value should be used if client wishes to make subsequent conditional GET requests.
              example: "4499494"
              required: true
          body:
            application/json:
              example: <<examplePaginatedResponseExample>>
              type: <<examplePaginatedResponseType>>



    post:
      is: [throwsForbiddenError,throwsResourceNotFoundError,throwsInternalServerError]
      description: Create a new <<resourcePathName | !singularize>>
      body:
        application/json:
          example: <<createResourceRequestExample>>
          type: <<createResourceRequestType>>

      responses:
        201:
          description: Succesfully created a new <<resourcePathName | !singularize>>
          headers:
            Content-Location:
              description: Location of the newly created <<resourcePathName | !singularize>>
              type: string
              required: false
          body:
            application/json:
              description: Returns the created <<resourcePathName | !singularize>> resource
              example: <<createResourceResponseExample>>
              type: <<createResourceResponseType>>

        400:
          description: Invalid API request submitted for creating a new <<resourcePathName | !singularize>>
          body:
            application/json:
              example: <<createResourceBadRequestExample>>
              type: errorResponse

  resource:
    description: Resource type for API operations on individual resource
    get:
      is: [throwsForbiddenError,throwsResourceNotFoundError,throwsInternalServerError]
      description: Retrieve a single <<resourcePathName | !singularize>>


      responses:
        200:
          description: Returns the <<resourcePathName | !singularize>> resource
          body:
            application/json:
              example: <<getSingleResourceExample>>
              type: <<getSingleResourceType>>



    put:
      is: [throwsForbiddenError,throwsResourceNotFoundError,throwsInternalServerError]
      description: Update an existing  <<resourcePathName | !singularize>>
      body:
        application/json:
          example: <<updateResourceRequestExample>>
          type: <<updateResourceRequestType>>
      responses:
        204:
          description: Returns the <<resourcePathName | !singularize>> resource
          body:
            application/json:
              example: <<updateResourceResponseExample>>
              type: <<updateResourceResponseType>>


    delete:
      is: [throwsForbiddenError,throwsResourceNotFoundError,throwsInternalServerError]
      description: Delete an existing <<resourcePathName | !singularize>>
      responses:
        204:
          description: Resource successfully deleted. No response body.


###################
## API Definitions
###################
/customers:
  displayName: Customer collection
  securedBy: basic
  description: Set of APIs to manage Customer resource.
  type:  {
            collection:
              {
                examplePaginatedResponseExample : !include examples/getCustomerPaginatedResponse-example.json,
                examplePaginatedResponseType: paginatedResponse,

                createResourceRequestExample : !include examples/customer-example.json,
                createResourceRequestType: customer,

                createResourceResponseExample: !include examples/createCustomerResponse-example.json,
                createResourceResponseType: customer,

                createResourceBadRequestExample: !include examples/400-createCustomerBadRequest-example.json
              }
        }
  get:
    is: [pageable,sortable]


  /{customerId}:
    displayName: Customer resource
    securedBy: basic
    description: Operations on individual Customer resource

    type:  {
      resource:
          {
            updateResourceRequestExample : !include examples/customer-example.json,
            updateResourceRequestType: customer,

            updateResourceResponseExample: !include examples/customer-example.json,
            updateResourceResponseType: customer,

            getSingleResourceExample: !include examples/customer-example.json,
            getSingleResourceType: customer
          }
      }
    get:
      is: [ makeConditionalRequests]
    patch:
      is:  [allowPatch: {
          examplePatchResourceBody : !include examples/patchCustomer-example.json,
          patchResourceResponseExample : !include examples/customer-example.json,
          patchResourceResponseType : customer
        }]

  /search:
    displayName: Customer search
    securedBy: basic
    description: Search for customers in the system based on their attributes
    get:
      is:  [pageable,sortable,throwsInternalServerError]
      description: |
        Search for customers by first name, last name or address
      queryParameters:
        firstName:
          required: false
          description: First name of customer
          type: string
          example: John
        lastName:
          required: false
          description: Last name of customer
          type: string
          example: Smith
        address:
          required: false
          description: Add whole or part of the address to retrieve matching customers. This could be suburb, postcode or state.
          type: string
          example: Wyong, Mountain%20Street, 2145

      responses:
        200:
          description: |
            Paginated list of customers that match search term
          body:
            application/json:
              example: !include examples/getCustomerPaginatedResponse-example.json
        400:
          description: Bad search request submitted
          body:
            application/json:
              example: !include examples/400-badSearchRequest.json
              type: errorResponse
