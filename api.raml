#%RAML 1.0
title: customer-api-raml
version: v1
protocols: [HTTPS]
baseUri: https://api.samplehost.com/api/{version}
mediaType: application/json
description: !
  "This document serves as an API specification for permitted operations on Customer resource.\n"
securedBy: oauth_2_0

###################
## Security Schemes
###################
securitySchemes:
  basic: !include securitySchemes/basic.raml
  oauth_2_0: !include securitySchemes/oauth_2_0.raml


###################
## Types
###################
types:
  customer:
    description: Model for 'Customer' resource
    schema: !include schemas/customer.schema

  errorResponse:
    description: Standard model for all error responses (irrespective of the code)
    schema: !include schemas/errorResponse.schema

  paginatedResponse:
    description: |
      Standard model for paginated response.\n
      The paginated response contain necessary attributes which will indicate to the consumer how many times they will need to invoke to API to obtain the complete resultset.
    schema: !include schemas/paginatedResponse.schema



###################
## Traits
###################
traits:
  pageable: !include traits/pageable.raml
  sortable: !include traits/sortable.raml
  throwsForbiddenError: !include traits/throwsForbiddenError.raml
  throwsResourceNotFoundError: !include traits/throwsResourceNotFoundError.raml
  throwsInternalServerError: !include traits/throwsInternalServerError.raml
  makeConditionalRequests: !include traits/makeConditionalRequests.raml
  allowPatch:
      description: Allow partial modification of resource << resourcePathName | !singularize >>
      body: <<examplePatchResourceBody>>
      responses:
        204:
          description: Returns the <<resourcePathName | !singularize>> object
          body:
            application/json:
              example: <<patchResourceResponseExample>>
              type: <<patchResourceResponseType>>


###################
## Resource Types
###################
resourceTypes:
  collection: !include ./resourceTypes/collection.raml
  resource: !include ./resourceTypes/resource.raml


###################
## API Definitions
###################
/customers:
  displayName: Customer collection
  description: Set of APIs to manage Customer resource.
  type:  {
            collection:
              {
                examplePaginatedResponseExample : !include examples/getCustomerPaginatedResponse-example.json,
                examplePaginatedResponseType: paginatedResponse,

                createResourceRequestExample : !include examples/customer-example.json,
                createResourceRequestType: customer,

                createResourceResponseExample: !include examples/createCustomerResponse-example.json,
                createResourceResponseType: customer,

                createResourceBadRequestExample: !include examples/400-createCustomerBadRequest-example.json
              }
        }
  get:
    is: [pageable,sortable]


  /{customerId}:
    displayName: Customer resource
    securedBy: oauth_2_0
    description: Operations on individual Customer resource

    type:  {
      resource:
          {
            updateResourceRequestExample : !include examples/customer-example.json,
            updateResourceRequestType: customer,

            updateResourceResponseExample: !include examples/customer-example.json,
            updateResourceResponseType: customer,

            getSingleResourceExample: !include examples/customer-example.json,
            getSingleResourceType: customer
          }
      }
    get:
      is: [ makeConditionalRequests]
    patch:
      is:  [allowPatch: {
          examplePatchResourceBody : !include examples/patchCustomer-example.json,
          patchResourceResponseExample : !include examples/customer-example.json,
          patchResourceResponseType : customer
        }]

  /search:
    displayName: Customer search
    description: Search for customers in the system based on their attributes
    get:
      is:  [pageable,sortable,throwsInternalServerError]
      description: |
        Search for customers by first name, last name or address
      queryParameters:
        firstName:
          required: false
          description: First name of customer
          type: string
          example: John
        lastName:
          required: false
          description: Last name of customer
          type: string
          example: Smith
        address:
          required: false
          description: Add whole or part of the address to retrieve matching customers. This could be suburb, postcode or state.
          type: string
          example: Wyong, Mountain%20Street, 2145

      responses:
        200:
          description: |
            Paginated list of customers that match search term
          body:
            application/json:
              example: !include examples/getCustomerPaginatedResponse-example.json
        400:
          description: Bad search request submitted
          body:
            application/json:
              example: !include examples/400-badSearchRequest.json
              type: errorResponse
