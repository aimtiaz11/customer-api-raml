#%RAML 1.0
title: customer-api-raml
version: v1
protocols: [HTTPS]
baseUri: https://api.samplehost.com/api/{version}
mediaType: application/json

###################
## Traits
###################

traits:
  pageable:
    description: Trait for paginated requests, setting the page number and/or size parameters
    queryParameters:
      pageNo:
        description: The page number to fetch
        type: number
        required: false
        default: 0
        example: 5
      pageSize:
        description: The maximum number of records to fetch per page
        type: number
        required: false
        default: 100
        example: 5
  sortable:
    description: Trait for sortable requests, setting the sorting field and order
    queryParameters:
      sortBy:
        description: |
          List of fields to sort by (comma separated). For example: #TODO: add example
        type: string
        required: false
        example: -firstName,lastName

###################
## Resource Types
###################

## TODO: Refactor these into resourceType folder
resourceTypes:
  collection:
    usage: Resource type for API operations on collection of resources
    description: A collection of <<resourcePathName>> in the system. Due to the high volume of data that can be retrieved, the response is paginated.

    get:
      description: Retrieve a paginated list of <<resourcePathName | !pluralize>>
      responses:
        200:
          body:
            example: <<examplePaginatedResponseExample>>
    post:
      description: Create a new <<resourcePathName | !singularize>>
      body:
        application/json:
          example: <<createResourceRequestExample>>
      responses:
        201:
          description: Succesfully created a new <<resourcePathName | !singularize>>
          headers:
            Content-Location:
              description: Location of the newly created <<resourcePathName | !singularize>>
              type: string
              required: false
          body:
            application/json:
              description: Returns the created <<resourcePathName | !singularize>> resource
              example: <<createResourceResponseExample>>

  individual:
    description: Resource type for API operations on individual resource
    get:
      description: Retrieve <<resourcePathName | !singularize>> denoted by the identifier
      responses:
        200:
          description: Returns the <<resourcePathName | !singularize>> object
          body: <<getSingleResourceExample>>
    put:
      description: |
        Update an existing  <<resourcePathName | !singularize>>
      body:
        application/json:
          example: <<updateResourceRequestExample>>
      responses:
        204:
          description: Returns the <<resourcePathName | !singularize>> object
          body: <<updateResourceResponseExample>>
    delete:
      description: |
        Delete an existing <<resourcePathName | !singularize>>
      responses:
        204:
          description: Resource successfully deleted. No response body.


###################
## API Definitions
###################
/customers:
  description: Set of APIs to manage Customer resource.
  type:  { collection: {examplePaginatedResponseExample : !include examples/getCustomerPaginatedResponse-example.json, createResourceRequestExample : !include examples/customer-example.json, createResourceResponseExample: !include examples/createCustomerResponse-example.json  } }

  get:
    is: [pageable,sortable]

  /{customerId}:
    description: Operations on individual Customer resource
    type:  { individual: {updateResourceRequestExample : !include examples/customer-example.json, updateResourceResponseExample: !include examples/customer-example.json, getSingleResourceExample: !include examples/customer-example.json } }

  /search:
    description: API to search for customers.
    get:
      is:  [pageable,sortable]
      description: |
        Search for customers by first name, last name or address
      queryParameters:
        firstName:
          required: false
          description: First name of customer
          type: string
          example: John
        lastName:
          required: false
          description: Last name of customer
          type: string
          example: Smith
        address:
          required: false
          description: Add whole or part of the address to retrieve matching customers. This could be suburb, postcode or state.
          type: string
          example: Wyong, Mountain%20Street, 2145

      responses:
        200:
          description: |
            Paginated list of customers that match search term
          body: !include examples/getCustomerPaginatedResponse-example.json
